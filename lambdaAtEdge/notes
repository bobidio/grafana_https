Components:
Grafana instance
    Represented in my example with EC2 instance
HTTPS access to Grafana instance
    Defines domain and URL used for Cognito Client Sign-in & Sign-out URLs
Cognito User Pool for authentication
S3 Image bucket
    pre-existing
CloudFront & Lambda@Edge to guard access to S3 Image bucket referencing Cognito User Pool
    'Artifact bucket' & 'Target bucket' required for deployment


SSM Parameter store
  Containing Cognito user pool reference from other template
    where? region: 'ap-southeast-2'

'Artifact bucket' & 'Target bucket'
  Target need not be us-east-1, but tamplate must be deployed there
  Artifact bucket - not sure.  Any reason it can't be us-east-1?

Install sequence
grafana_https stack in Sydney - provides HTTPS redirect to existing Grafana instance with existing Domain name and AWS cert.
Cognito_template stack in ap-southeast-2 (Sydney) - provides Cognito User Pool ID and Client ID.
Edit the grafana.ini file with the outputs from the Cognito template, changing all occurrences of the Client ID and Client Secret
Use the Oauth button on the Grafana log in page to access the Cognito log in screen.  Use the link on this screen to create users in Cognito.
Edit the deploy.sh file to set values desired, then run the script to install the CloudFront/Lambda/S3 software.  The Cognito User pool ID was stored in an AWS SSM variable for this next template to use.
The Lambda gateway function is in the index.js file.
The output of the CloudFormation template deployed includes the root domain of the CloudFront distribution:
e.g. cloudFrontDomainName 	d19jl3e4pb3ydy.cloudfront.net

This domain is used to request files from the S3 bucket:
https://d19jl3e4pb3ydy.cloudfront.net/c4371fce-7dd2-4afe-b3ba-e60827331dc9/ap-southeast-2%3A9c62924c-412e-4ebd-8504-dbac1007dca8/2019/3/5/Dilbert_climate-change-will-get-it-done.gif

The request will succeed or fail according to the Lambda@Edge gateway function deployed with the solution (in index.js).  Currently, the only check implemented is that the JWT token included with the request be valid currently for a Cognito user.



Make changes to grafana.ini file using information from the above set ups:

Working apart from first Oauth account creation leads to 'missing state' error.  Cleared up by logging in from home page.  Subsequent account creation does not repeat the problen:
[ec2-user@ip-172-31-1-185 collectd-influxdb-grafana-docker]$ diff grafana.ini grafana.ini.602.base 
41c41
< domain = grafana.mrsandbox.rocks
---
> ;domain = localhost
49c49
< root_url = https://grafana.mrsandbox.rocks
---
> ;root_url = http://localhost:3000
122c122
< cookie_secure = true
---
> ;cookie_secure = false
178c178
< cookie_secure = true
---
> ;cookie_secure = false
246,248c246
< signout_redirect_url = https://7c6o4qvi6097s75uudgh28l6p3.auth.ap-southeast-2.amazoncognito.com/logout?client_id=7c6o4qvi6097s75uudgh28l6p3&logout_uri=https://grafana.mrsandbox.rocks&redirect_uri=https://grafana.mrsandbox.rocks&response_type=code&scope=openid+profile+email
---
> ;signout_redirect_url =
292,296c290,294
< enabled = true
< name = OAuth
< allow_sign_up = true
< client_id = 7c6o4qvi6097s75uudgh28l6p3
< client_secret = 1bf3l5hv7mkl432f7e37rajgc67u73p6a6k1m2pjmsvma7jlr6bv
---
> ;enabled = false
> ;name = OAuth
> ;allow_sign_up = true
> ;client_id = some_id
> ;client_secret = some_secret
298,301c296,298
< scopes = openid profile email
< auth_url = https://7c6o4qvi6097s75uudgh28l6p3.auth.ap-southeast-2.amazoncognito.com/oauth2/authorize
< token_url = https://7c6o4qvi6097s75uudgh28l6p3.auth.ap-southeast-2.amazoncognito.com/oauth2/token
< api_url = https://7c6o4qvi6097s75uudgh28l6p3.auth.ap-southeast-2.amazoncognito.com/oauth2/userInfo
---
> ;auth_url = https://foo.bar/login/oauth/authorize
> ;token_url = https://foo.bar/login/oauth/access_token
> ;api_url = https://foo.bar/user
334c331
< enabled = false
---
> ;enabled = true
367c364
< level = debug
---
> ;level = info



[ec2-user@ip-172-31-1-185 collectd-influxdb-grafana-docker]$ diff grafana.ini grafana.ini.602.base 
41c41
< domain = grafana.mrsandbox.rocks
---
> ;domain = localhost
49c49
< root_url = https://grafana.mrsandbox.rocks
---
> ;root_url = http://localhost:3000
122c122
< cookie_secure = true
---
> ;cookie_secure = false
178c178
< cookie_secure = true
---
> ;cookie_secure = false
246c246
< signout_redirect_url = https://7c6o4qvi6097s75uudgh28l6p3.auth.ap-southeast-2.amazoncognito.com/logout?client_id=7c6o4qvi6097s75uudgh28l6p3&logout_uri=https://grafana.mrsandbox.rocks&redirect_uri=https://grafana.mrsandbox.rocks&response_type=code&scope=openid+profile+email
---
> ;signout_redirect_url =
290,294c290,294
< enabled = true
< name = OAuth
< allow_sign_up = true
< client_id = 7c6o4qvi6097s75uudgh28l6p3
< client_secret = 1bf3l5hv7mkl432f7e37rajgc67u73p6a6k1m2pjmsvma7jlr6bv
---
> ;enabled = false
> ;name = OAuth
> ;allow_sign_up = true
> ;client_id = some_id
> ;client_secret = some_secret
296,299c296,298
< scopes = openid profile email
< auth_url = https://7c6o4qvi6097s75uudgh28l6p3.auth.ap-southeast-2.amazoncognito.com/oauth2/authorize
< token_url = https://7c6o4qvi6097s75uudgh28l6p3.auth.ap-southeast-2.amazoncognito.com/oauth2/token
< api_url = https://7c6o4qvi6097s75uudgh28l6p3.auth.ap-southeast-2.amazoncognito.com/oauth2/userInfo
---
> ;auth_url = https://foo.bar/login/oauth/authorize
> ;token_url = https://foo.bar/login/oauth/access_token
> ;api_url = https://foo.bar/user
332c331
< enabled = false
---
> ;enabled = true
365c364
< level = debug
---
> ;level = info


https://7c6o4qvi6097s75uudgh28l6p3.auth.ap-southeast-2.amazoncognito.com/oauth2/token, 
